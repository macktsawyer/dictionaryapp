{"version":3,"sources":["input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","useState","search","setSearch","final","setFinal","loading","setLoading","url","setUrl","useEffect","fetch","then","response","status","Error","res","json","data","query","map","i","push","catch","error","console","log","className","onSubmit","e","preventDefault","apiURL","type","name","value","placeholder","onChange","target","r","word","phonetic","origin","meanings","c","style","listStyle","partOfSpeech","definitions","f","definition","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAkFeA,EA/ED,WACV,MAA8BC,mBAAS,UAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAQG,EAAR,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KACA,EAAwBN,mBAAS,UAAjC,mBAAQO,EAAR,KAAaC,EAAb,KAoCA,OAvBAC,qBAAU,WACNH,GAAW,GACXI,MAAMH,GAAKI,MAAK,SAACC,GACb,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC5C,MAAM,IAAIC,MAAM,4BAEpB,OAAOF,KAEVD,MAAK,SAACI,GAAD,OAASA,EAAIC,UAClBL,MAAK,SAACM,GACH,IAAIC,EAAQ,GACZD,EAAKE,KAAI,SAACC,GACNF,EAAMG,KAAKD,GACXhB,EAAS,CAACc,UAEfI,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBjB,GAAW,KACb,CAACC,IAEHiB,QAAQC,IAAItB,GAGR,gCACI,qBAAKuB,UAAU,SAAf,SACI,+CAEJ,qBAAKA,UAAU,aAAf,SACI,uBAAMC,SAnCG,SAACC,GAClBA,EAAEC,iBACF,IAAIC,EAAM,0DAAsD7B,GAChEO,EAAOsB,IAgCC,UACI,uBAAOJ,UAAU,YAAYK,KAAK,OAAOC,KAAK,SAASC,MAAOhC,EAAQiC,YAAY,SAClFC,SA1ChB,SAAsBP,GAClBA,EAAEC,iBACF3B,EAAU0B,EAAEQ,OAAOH,UAyCP,wBAAQP,UAAU,eAAeK,KAAK,SAAtC,yBAGR,8BACK1B,EAAU,UACX,qBAAKqB,UAAU,cAAf,SACKvB,EAAMgB,KAAI,SAACC,GAAD,OACPA,EAAED,KAAI,SAACkB,GAAD,OACF,qBAAKX,UAAU,oBAAf,SACI,+BACKW,EAAEC,MAAS,8BAAG,iCAASD,EAAEC,OAAd,aAAmCD,EAAEE,aAChDF,EAAEG,QAAW,4BAAIH,EAAEG,SACnBH,EAAEI,UAAa,8BAAMJ,EAAEI,SAAStB,KAAI,SAACuB,GAAD,OAC7B,sBAAKhB,UAAU,uBAAf,UACI,oBAAIiB,MAAQ,CAACC,UAAU,QAAvB,SAAiCF,EAAEG,eACnC,oBAAIF,MAAQ,CAACC,UAAU,QAAvB,SAAiCF,EAAEI,YAAY3B,KAAI,SAAC4B,GAAD,OAAQA,EAAEC,2CCxD9FC,MARf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACI,cAAC,EAAD,OCMOwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49c74f9d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './input.scss';\r\n\r\nconst Input = () => {\r\n    const [ search, setSearch ] = useState('Banana');\r\n    const [ final, setFinal ] = useState([]);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ url, setUrl ] = useState('Banana');\r\n\r\n    function handleChange(e) {\r\n        e.preventDefault();\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let apiURL = `https://api.dictionaryapi.dev/api/v2/entries/en/${search}`;\r\n        setUrl(apiURL);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch(url).then((response) => {\r\n            if (response.status >= 400 && response.status < 600) {\r\n                throw new Error('Bad response from server');\r\n            }\r\n            return response;\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let query = [];\r\n            data.map((i) => {\r\n                query.push(i);\r\n                setFinal([query])\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n        setLoading(false);\r\n    },[url])\r\n\r\n    console.log(final)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <h1>Macktionary</h1>\r\n            </div>\r\n            <div className=\"searchForm\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input className=\"searchBar\" type=\"text\" name=\"search\" value={search} placeholder=\"Search\" \r\n                    onChange={handleChange} />\r\n                    <button className=\"searchButton\" type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                {loading ? 'Loading' : \r\n                <div className=\"resultsCard\">\r\n                    {final.map((i) => \r\n                        i.map((r) => (\r\n                            <div className=\"resultsSubSection\">\r\n                                <ul>\r\n                                    {r.word && (<p><strong>{r.word}</strong>{` - ${r.phonetic}`}</p>)}\r\n                                    {r.origin && (<p>{r.origin}</p>)}\r\n                                    {r.meanings && (<div>{r.meanings.map((c) => \r\n                                            <div className=\"individualDefinition\">\r\n                                                <li style ={{listStyle:'none'}}>{c.partOfSpeech}</li>\r\n                                                <li style ={{listStyle:'none'}}>{c.definitions.map((f) => (f.definition))}</li>\r\n                                            </div>\r\n                                            )}</div>)}\r\n                                </ul>\r\n                            </div>\r\n                        )\r\n                        )\r\n                    )}\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import './App.scss';\nimport Input from './input'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Input />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}